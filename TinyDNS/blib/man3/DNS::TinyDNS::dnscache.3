.\" Automatically generated by Pod::Man version 1.15
.\" Mon Mar 10 17:46:09 2003
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "dnscache 3"
.TH dnscache 3 "perl v5.6.1" "2003-03-07" "User Contributed Perl Documentation"
.UC
.SH "NAME"
\&\s-1DNS:\s0:TinyDNS::dnscache \- Perl extension for manipulating dnscache from djbdns 
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use DNS::TinyDNS;
.Ve
.Vb 3
\&        # First create the object
\&        my $dnscache = DNS::TinyDNS->new(type => 'dnscache',
\&                                         dir  => '/service/dnscachex');
.Ve
.Vb 4
\&        # Manage the allowed ips to use this cache
\&        my @ips=$dnscache->list_ips;
\&        $dnscache->add_ip('10.0.0.1');
\&        $dnscache->del_ip('10.0.0');
.Ve
.Vb 4
\&        # Manage root servers
\&        my @root_servers=$dnscache->list_servers;
\&        $dnscache->add_server('10.0.0.1');
\&        $dnscache->del_server('10.0.0.1');
.Ve
.Vb 4
\&        # Manage the enviroment
\&        $dnscache->set_env(     cachesize   => 100000,
\&                                ip          => '10.0.0.1');
\&        my ($cache,$ip) = $dnscache->get_env( 'cachesize', 'ip' );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module will allow you to manipulate djbdns dnscache files.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.Sh "list_ips"
.IX Subsection "list_ips"
.PP
Returns a list of all the ips/nets allowed to use this cache server
.PP
.Vb 1
\&        my @ips=$dnscache->list_ips;
.Ve
.Sh "add_ip"
.IX Subsection "add_ip"
.PP
Adds an ips/nets to use this cache server
.PP
.Vb 1
\&        $dnscache->add_ip('10.0.0');
.Ve
This let all 10.0.0.0/24 to use this dnsserver.
.Sh "del_ip"
.IX Subsection "del_ip"
.PP
Remove an ips/nets of the list of allowed ips
.PP
.Vb 1
\&        $dnscache->del_ip('10.0.0');
.Ve
This deletes \f(CW\*(C`All entries\*(C'\fR of 10.0.0.0/24 allowed to use this dnscache.
.Sh "lists_servers"
.IX Subsection "lists_servers"
.PP
Returns a list of the root servers
.PP
.Vb 1
\&        my @root_servers=$dnscache->list_servers;
.Ve
.Sh "add_server"
.IX Subsection "add_server"
.PP
Add a root server
.PP
.Vb 2
\&        $dnscache->add_server('10.0.0.1')
\&                or warn "Cant add server";
.Ve
.Sh "del_server"
.IX Subsection "del_server"
Deletes a root server
.PP
.Vb 2
\&        $dnscache->del_server('10.0.0.1')
\&                or warn "Cant del server";
.Ve
.Sh "get_env set_env"
.IX Subsection "get_env set_env"
.PP
You can set/get this vars:
.PP
.Vb 5
\&    IP
\&    IPSEND
\&    CACHESIZE
\&    DATALIMIT
\&    ROOT
.Ve
For further information about every var, consult djbdns cache documentation at
\&\f(CW\*(C`http://cr.yp.to/\*(C'\fR
