.\" Automatically generated by Pod::Man v1.3, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TinyDNS 3"
.TH TinyDNS 3 "2003-03-07" "perl v5.6.1" "User Contributed Perl Documentation"
.UC
.SH "NAME"
DNS::TinyDNS \- Perl extension for manipulating djbdns 
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use DNS::TinyDNS;
.Ve
.Vb 3
\&  # Create a dnsserver or a dnscache
\&  my $cache  = DNS::TinyDNS->new(type => 'dnscache');
\&  my $server = DNS::TinyDNS->new(type => 'dnsserver');
.Ve
.Vb 2
\&  # Set the config directory
\&  $server->dir('/service/tinydns');
.Ve
.Vb 4
\&  # start, stop and restart 
\&  $cache->stop;
\&  $cache->start;
\&  $server->restart;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module will allow you to manipulate djbdns files. You can
configure the options of dnscache, list, add, remove, or modify
all the entrys of your dns server too.
.PP
Please check the documentation of DNS::TinyDNS::dnscache or 
DNS::TinyDNS::dnsserver to see the details of each one.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.Sh "new"
.IX Subsection "new"
.PP
When you create a new object you have to specify if it's a dns server
or a dnscache.
.PP
.Vb 2
\&        # Create a dnsserver
\&        my $server=DNS::TinyDNS->new(type => 'dnsserver');
.Ve
.Vb 2
\&        # Create a dnscache
\&        my $cache  = DNS::TinyDNS->new(type => 'dnscache');
.Ve
You can specify the directory at this time or do it later.
.PP
.Vb 2
\&        my $server = DNS::TinyDNS->new( type => 'dnsserver',
\&                                        dir  => '/service/tinydns');
.Ve
.Sh "dir"
.IX Subsection "dir"
.PP
If you pass a parameter, it sets the directory, otherwise, it just
return the value of the directory.
.PP
.Vb 2
\&        $server->dir('/etc/tinydns')
\&                or warn "Cant change dir to /etc/tinydns";
.Ve
.Vb 1
\&        my $dir = $server->dir;
.Ve
.Sh "get_env"
.IX Subsection "get_env"
.PP
This method depends on the type of the object.
.Sh "set_env"
.IX Subsection "set_env"
.PP
This method depends on the type of the object.
.Sh "start,stop,restart"
.IX Subsection "start,stop,restart"
.PP
This methods deppends on where are installed daemontools, by
default, they are at /usr/local/bin/svc but you can change
it with the svc method.
.PP
.Vb 3
\&        $cache->restart or warn "Cant restart";
\&        $server->stop or warn "Cant stop";
\&        $server->start or warn "Cant start";
.Ve
.Sh "svc"
.IX Subsection "svc"
.PP
If you pass a parameter, it sets the location of svc, otherways
it just return the current value.
.PP
.Vb 3
\&        my $svc_location = $server->svc;
\&        $server->svc('/usr/bin/svc')
\&                or warn "Cant set svc to /usr/bin/svc";
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Anarion: anarion@7a69ezine.org
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DNS::TinyDNS::dnscache.
DNS::TinyDNS::dnsserver.
